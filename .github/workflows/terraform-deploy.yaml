# This is a basic workflow to help you get started with Actions

name: Terraform Deployment Workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["dev"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: ${{ (github.ref == 'refs/heads/main' && 'dev') }}
    # default settings to apply for all the steps
    defaults:
      run:
        working-directory: ./roots/main-eks-root/
        shell: bash

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Login to AWS
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ vars.IAM_ROLE }}
        role-session-name: githubactionssession
        aws-region: "us-east-1"

    - name: Checkout repository
      uses: actions/checkout@v4

    # Run Terraform commands
    - name: Initialize
      run: terraform init

    - name: Plan Infrastructure
      run: terraform plan -input=false -var-file=project-x.tfvars

    - name: Deploy Infrastructure
      run: terraform apply -input=false -auto-approve -var-file=project-x.tfvars

    - name: Apply permissions in aws-auth for K8s RBAC
      working-directory: ./eks-module
      run: |
        aws eks update-kubeconfig --name project-x-dev
        kubectl config current-context
        kubectl apply -f aws-auth.yaml

    # - name: Destroy Infrastructure
    #   run: terraform destroy -input=false -auto-approve -var-file=project-x.tfvars
